import glob
import os
import json
import logging
import pprint



def get_files(root):
    # return glob.glob('**/*.mod', recursive=True)
    return glob.glob(os.path.join(root, '**/*.mod'), recursive=True)




def get_png_content(file):
    # \x14\x0a\x10\xee\xd2\x8b\x01\x61\x9f\x29\x4b\x9d\xef\xa0\xee\xac\x39\x0c\xa2\x10\x01\xa2\x2b\x08\xc0\x01\x10\xa0\x02\x1a\x05\x08\x60\x10\x90\x01\x22\x0a\x0d\x00\x00\x00\x3f\x15\x00\x00\x00\x3f\x2d\x00\x00\xc8\x42\x52\x81\x2b\x08\x01\x12\xfc\x2a\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\xc0\x00\x00\x01\x20\x08\x06\x00\x00\x00\xe2\xef\x7c\x31\x00\x00\x15\x43\x49\x44\x41\x54\x78\x01\xed\x9d\x51\x8e\xed\x38\x11\x86\xbb\x79\x66\x11\x2c\x61\x46\x42\xe2\x01\x16\x30\x2f\xac\x60\xb6\x82\x84\x90\xd8\x0a\x2b\xe0\x65\x16\xc0\x3c\x20\x21\xcd\x2c\x81\x45\xf0\x7e\x39\x95\xce\xef\xfb\x77\xdd\x9c\x38\x89\xed\xe4\x9c\xee\x2f\x12\x5d\xa9\xd8\x2e\x97\xbf\xaa\xb2\x7d\xae\x34\xe2\xf5\x65\xe0\xf3\xcb\x1f\x5e\x5e\xbe\xff\xf7\xcb\x4b\xc8\x97\x1f\xfe\xf8\xf2\xf2\xd3\xcf\xdf\xc8\xef\xfe\xf2\xe3\xcb\xaf\x7f\xff\xc7\x37\xdf\xd5\xbf\xb4\x1f\xf0\x33\xe6\xe6\x69\x27\x30\xc5\xef\x80\x99\x12\xbb\x83\xb1\x57\xee\x8c\x8c\xe3\xeb\x81\x75\x6d\x1a\x72\x14\xda\x26\xe3\x1b\x3a\x9d\x01\x6f\x83\x1b\x4f\xdf\xe5\xdd\x26\x76\xe1\x6a\x46\x15\xc1\x6f\x46\xac\x49\xd0\x26\xdb\x51\xfd\xb7\xa7\x2c\x60\xd6\x63\x77\x98\x9e\x8a\x5e\xfa\xbd\xf5\xde\xfc\x57\x05\x28\xb9\x79\x20\x1d\x0b\x01\xb1\x93\x2c\x0d\x1b\x5f\x14\x3b\xc9\xe9\x54\xbf\x8d\xad\xe9\x39\x57\xb4\x99\x6d\x9c\x76\x57\xb7\xee\x27\x80\xc3\xca\x8e\xc7\xc2\xa7\xeb\xce\xec\xe2\x5e\x7d\xd7\xca\xe6\xce\xf2\xa1\x40\x3d\x62\xe4\x13\x8e\x89\x38\x8a\x5d\xcb
    result = None
    with open(file, mode="rb") as f:
        # data starts with 50-100 bytes after the header
        # find 0x89 0x50 0x4E 0x47 0x0D 0x0A 0x1A 0x0A
        # and return the data from that point

        # read the first 100 bytes
        data = f.read(100)
        # find the start of the png header
        start = data.find(b"\x89\x50\x4E\x47\x0D\x0A\x1A\x0A")
        if start != -1:
            # seek to the start of the png header
            f.seek(start)
            # read the rest of the file
            result = f.read()
    return result
    



def main():
    root = os.path.abspath(os.environ["TEMP"])
    root = os.path.join(root,'nexon','MapleStory Worlds', 'resource_cache')

    output_root = os.path.dirname(os.path.abspath(__file__))
    os.path.isdir(os.path.join(output_root,"output")) or os.makedirs(os.path.join(output_root,"output"))
    print(root)
    print(output_root)
    for file in get_files(root):
        if png:=get_png_content(os.path.join(root,file)):
            with open(os.path.join(output_root,"output",os.path.basename(file))+".png", mode="wb") as f:
                f.write(png)

if __name__ == '__main__':
    main()